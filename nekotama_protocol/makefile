#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS = 
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = 

INC_DEBUG = $(INC) -I../nekotama_utils -I../nekotama_socket -I../extern/Bencode/Bencode
CFLAGS_DEBUG = $(CFLAGS) -std=c++11 -Wfatal-errors -Wall -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)../nekotama_utils/bin/linux/Debug/libnekotama_utils.a ../nekotama_socket/bin/linux/Debug/libnekotama_socket.a
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/linux/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/linux/Debug/libnekotama_protocol.a

INC_RELEASE = $(INC) -I../nekotama_utils -I../nekotama_socket -I../extern/Bencode/Bencode
CFLAGS_RELEASE = $(CFLAGS) -O3 -std=c++11 -Wall
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)../nekotama_utils/bin/linux/Release/libnekotama_utils.a ../nekotama_socket/bin/linux/Release/libnekotama_socket.a
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/linux/Release
DEP_RELEASE = 
OUT_RELEASE = bin/linux/Release/libnekotama_protocol.a

OBJ_DEBUG = $(OBJDIR_DEBUG)/Client.o $(OBJDIR_DEBUG)/ClientSession.o $(OBJDIR_DEBUG)/Server.o $(OBJDIR_DEBUG)/VirtualIpPool.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/Client.o $(OBJDIR_RELEASE)/ClientSession.o $(OBJDIR_RELEASE)/Server.o $(OBJDIR_RELEASE)/VirtualIpPool.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	test -d bin/linux/Debug || mkdir -p bin/linux/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(AR) rcs $(OUT_DEBUG) $(OBJ_DEBUG)

$(OBJDIR_DEBUG)/Client.o: Client.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Client.cpp -o $(OBJDIR_DEBUG)/Client.o

$(OBJDIR_DEBUG)/ClientSession.o: ClientSession.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ClientSession.cpp -o $(OBJDIR_DEBUG)/ClientSession.o

$(OBJDIR_DEBUG)/Server.o: Server.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Server.cpp -o $(OBJDIR_DEBUG)/Server.o

$(OBJDIR_DEBUG)/VirtualIpPool.o: VirtualIpPool.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c VirtualIpPool.cpp -o $(OBJDIR_DEBUG)/VirtualIpPool.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/linux/Debug
	rm -rf $(OBJDIR_DEBUG)

before_release: 
	test -d bin/linux/Release || mkdir -p bin/linux/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(AR) rcs $(OUT_RELEASE) $(OBJ_RELEASE)

$(OBJDIR_RELEASE)/Client.o: Client.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Client.cpp -o $(OBJDIR_RELEASE)/Client.o

$(OBJDIR_RELEASE)/ClientSession.o: ClientSession.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ClientSession.cpp -o $(OBJDIR_RELEASE)/ClientSession.o

$(OBJDIR_RELEASE)/Server.o: Server.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Server.cpp -o $(OBJDIR_RELEASE)/Server.o

$(OBJDIR_RELEASE)/VirtualIpPool.o: VirtualIpPool.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c VirtualIpPool.cpp -o $(OBJDIR_RELEASE)/VirtualIpPool.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/linux/Release
	rm -rf $(OBJDIR_RELEASE)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

